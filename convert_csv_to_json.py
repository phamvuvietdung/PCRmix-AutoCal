import os
import json
import pandas as pd

# ƒê·ªãnh nghƒ©a th∆∞ m·ª•c ch·ª©a CSV v√† JSON
DATABASE_FOLDER = "database"
OUTPUT_FOLDER = "static/data"

# ƒê·∫£m b·∫£o th∆∞ m·ª•c ƒë·∫ßu ra t·ªìn t·∫°i
if not os.path.exists(OUTPUT_FOLDER):
    os.makedirs(OUTPUT_FOLDER)

# L·∫•y danh s√°ch c√°c file CSV v√† lo·∫°i b·ªè ph·∫ßn m·ªü r·ªông ".csv"
list_database = [f.replace(".csv", "") for f in os.listdir(DATABASE_FOLDER) if f.endswith(".csv")]

# L∆∞u danh s√°ch v√†o file JSON
list_json_path = os.path.join(OUTPUT_FOLDER, "list.json")
with open(list_json_path, "w", encoding="utf-8") as f:
    json.dump(list_database, f, ensure_ascii=False, indent=4)

# Chuy·ªÉn t·ª´ng file CSV sang JSON
for file in list_database:
    csv_path = os.path.join(DATABASE_FOLDER, f"{file}.csv")
    json_path = os.path.join(OUTPUT_FOLDER, f"{file}.json")

    try:
        # ƒê·ªçc file CSV
        df = pd.read_csv(csv_path)
        
        # Thay th·∫ø NaN b·∫±ng chu·ªói r·ªóng ƒë·ªÉ tr√°nh l·ªói khi chuy·ªÉn sang JSON
        df = df.fillna("")

        # Chuy·ªÉn ƒë·ªïi sang JSON
        df.to_json(json_path, orient="records", force_ascii=False, indent=4)
        print(f"‚úÖ ƒê√£ t·∫°o {json_path}")
    
    except Exception as e:
        print(f"‚ùå L·ªói khi x·ª≠ l√Ω {file}: {e}")

print("üéâ Ho√†n t·∫•t chuy·ªÉn ƒë·ªïi CSV sang JSON!")
